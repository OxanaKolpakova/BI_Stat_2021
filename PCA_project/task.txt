PCA

1.	Скачать данные https://archive.ics.uci.edu/ml/machine-learning-databases/00464/superconduct.zip. Их описание здесь https://archive.ics.uci.edu/ml/datasets/Superconductivty+Data#. Если коротко, то это данные по критическим температурам сверхпроводников (такая температура, ниже которой вещество становится сверхпроводником).
2.	Распаковать архив с данными. Там будет два файла: в первом информация об элементном состве вещества, во втором всякие физико-химические свойства.
3.	Объединить эти файлы в одну таблицу (не включайте в нее колонку material, так как она нам дальше не понадобится).
4.	В этой задаче мы хотим научиться предсказывать критическую температуру сверхпроводника (колонка critical_temp) по различным характеристикам вещества и по его составу (все остальные колонки).
5.	Разделите данные на обучающую и тестовую выборки, на первой вы будете оценивать коэффициенты, на второй вычислять метрику. Стандартизируйте ваши данные (но не целеую переменную). Важный момент, вы должны рассчитать среднее и стандартное отклонение на тренировочных данных, после чего трансформировать тестовые данные с помощью этого среднего и стандартного отклонения. Если непонятно, зачем, то представьте, что вам пришел один тестовый пример.
6.	Постройте линейную модель, которая по всем имеющимся у вас признакам предсказывает критическую температуру, посмотрите на adjusted R-squared.  Хорошая ли получилась модель?
7.	Кажется, что такое большое число признаков может мешать нам получить более качественную модель. Давайте попробуем применить PCA. Внимание, тут нужно действовать аккуратно, также как и со стандартизацией, нужно получить коэффициенты для главных компонент на тренировочных данных и дальше с помощью этого трансформировать тестовые.
8.	Выберите оптимальное на ваш взгляд количество главных компонент и постройте новую модель с их помощью. Стала ли модель лучше? Спойлер: у меня на данном этапе R-squared вышел около 0.75 (это без стандартизации и всего остального, так что должно выйти что-то такое или чуть выше).
9.	Попробуйте применить к данным kernel PCA. Мы о нем не успели поговорить, но метод очень мощный, так как он работает нелинейно (о нем много информации есть в интернете, а также можно написать мне и я расскажу). Используйте kernel="rbf". Внимание, работать такой PCA будет долго, так что выделите на этот этап хотя бы 1-2 часа (можно будет поставить считаться и пойти гулять). Если вы поймете, что вам не хватает мощности ПК, то напишите, я вам скину уже трансформированные данные.
10.	Постройте модель на данных, которые были трансформированы при помощи kernel PCA. Стало ли сильно лучше? Спойлер: должно стать сильно лучше).

Дополнительно (10 баллов):
•	Возьмите какие-нибудь данные sc-RNA seq. Можно скачать по ссылке, которая находится в приложенном ноутбуке.
•	Визуализируйте данные при помощи t-SNE и UMAP. Что можно сказать о ваших данных, исходя из этих графиков?


Результатом вашей работы должен быть jupyter notebook или файл в формате Rmd, выложенный в ваш репозиторий. Для сдачи прикрепите ссылку на pull request. Да, можно делать это на Python и на R. 
